// Generated by CoffeeScript 1.6.2
(function() {
  window.edgeDetection = {
    walls: [],
    init: function() {
      var _this = this;

      this.worker = new Worker('/build/app/edgedetection.js');
      return this.worker.addEventListener('message', function(e) {
        var data;

        data = e.data;
        config.wallNumber(data.walls.length);
        return _this.walls = data.walls;
      }, false);
    },
    update: function() {
      return this.worker.postMessage({
        imageData: get32BitImageData(ctxMap)
      });
    }
  };

  window.sensorSystem = {
    conf: new Conf(0, 0, 0, 0),
    angle: -PIHALF,
    angle2: -PIHALF,
    update: function() {
      return this.updateManual(u_s, u_phi);
    },
    updateManual: function(u_s, u_phi) {
      var conf;

      conf = truck.step(0, 0, -PIHALF, this.angle, u_s, u_phi, config.steps(), this.angle2);
      this.angle = conf.theta + conf.theta1 + PIHALF;
      this.angle2 = conf.theta + conf.theta2 + PIHALF;
      return this.conf = conf;
    }
  };

  window.delta = {
    x: 0,
    y: 0,
    theta: 0,
    update: function() {
      var c, s;

      this.theta += sensorSystem.conf.theta + PIHALF;
      s = Math.sin(this.theta);
      c = Math.cos(this.theta);
      this.x += sensorSystem.conf.x * c + sensorSystem.conf.y * s;
      return this.y += sensorSystem.conf.x * -s + sensorSystem.conf.y * c;
    }
  };

  app.on('angle.lidar', function(e, angle) {
    return sensorSystem.angle = angle;
  });

}).call(this);
